/*
   This file was generated automatically by the Mojo IDE version B1.3.3.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

/*
   Parameters:
     DIGITS = 4
*/
module bin_to_dec_2 (
    input clk,
    input [13:0] value,
    output reg [15:0] digits
  );
  
  localparam DIGITS = 3'h4;
  
  
  localparam IW = 4'he;
  
  localparam SC = 7'h1e;
  
  reg [29:0] M_s_d, M_s_q = 1'h0;
  wire [(4'he+0)-1:0] M_n_out;
  reg [(4'he+0)-1:0] M_n_in;
  
  genvar GEN_n0;
  generate
  for (GEN_n0=0;GEN_n0<4'he;GEN_n0=GEN_n0+1) begin: n_gen_0
    edge_detector_6 n (
      .clk(clk),
      .in(M_n_in[GEN_n0*(1)+(1)-1-:(1)]),
      .out(M_n_out[GEN_n0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  reg [3:0] M_c_d, M_c_q = 1'h0;
  
  reg [29:0] space;
  reg [3:0] d;
  
  integer i;
  integer idx;
  
  always @* begin
    M_s_d = M_s_q;
    M_c_d = M_c_q;
    
    M_n_in[+13-:14] = value;
    digits = 16'hffff;
    if (M_c_q == 5'h0f) begin
      for (i = 1'h0; i < 3'h4; i = i + 1) begin
        digits[(4'h3 - i)*4+3-:4] = M_s_q[((8'h1d - i * 3'h4)-(3'h4-1))*1+3-:4];
      end
    end else begin
      if (M_c_q == 1'h0) begin
        M_s_d = value;
        M_c_d = 1'h1;
      end else begin
        space = M_s_q;
        for (i = 1'h0; i < 3'h4; i = i + 1) begin
          idx = 8'h1d - i * 3'h4;
          d = M_s_q[((idx)-(3'h4-1))*1+3-:4];
          if (d > 4'h4) begin
            space[((idx)-(3'h4-1))*1+3-:4] = d + 4'h3;
          end
        end
        M_s_d = space << 1'h1;
        M_c_d = M_c_q + 1'h1;
      end
    end
  end
  
  always @(posedge clk) begin
    M_s_q <= M_s_d;
    
    if ((|M_n_out[+13-:14]) == 1'b1) begin
      M_c_q <= 1'h0;
    end else begin
      M_c_q <= M_c_d;
    end
  end
  
endmodule
