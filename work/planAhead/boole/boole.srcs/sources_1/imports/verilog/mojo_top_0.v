/*
   This file was generated automatically by the Mojo IDE version B1.3.3.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    input button,
    output reg [8:0] ldr_vol,
    input [8:0] ldr_input,
    output reg [1:0] p_led,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel
  );
  
  
  
  wire [4-1:0] M_beam_tracker_beam_position;
  reg [9-1:0] M_beam_tracker_ldr;
  beam_tracker_1 beam_tracker (
    .ldr(M_beam_tracker_ldr),
    .beam_position(M_beam_tracker_beam_position)
  );
  
  wire [16-1:0] M_bin_to_dec_digits;
  reg [14-1:0] M_bin_to_dec_value;
  bin_to_dec_2 bin_to_dec (
    .clk(clk),
    .value(M_bin_to_dec_value),
    .digits(M_bin_to_dec_digits)
  );
  
  reg rst;
  
  reg in;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_3 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_game_turn_player_out;
  wire [8-1:0] M_game_score_out;
  wire [3-1:0] M_game_p1_turn;
  wire [3-1:0] M_game_p2_turn;
  reg [4-1:0] M_game_beam_position;
  reg [1-1:0] M_game_on_turn;
  game_4 game (
    .clk(clk),
    .rst(rst),
    .beam_position(M_game_beam_position),
    .on_turn(M_game_on_turn),
    .turn_player_out(M_game_turn_player_out),
    .score_out(M_game_score_out),
    .p1_turn(M_game_p1_turn),
    .p2_turn(M_game_p2_turn)
  );
  wire [7-1:0] M_multi_seven_seg_seg;
  wire [4-1:0] M_multi_seven_seg_sel;
  reg [16-1:0] M_multi_seven_seg_values;
  multi_seven_seg_5 multi_seven_seg (
    .clk(clk),
    .rst(rst),
    .values(M_multi_seven_seg_values),
    .seg(M_multi_seven_seg_seg),
    .sel(M_multi_seven_seg_sel)
  );
  
  always @* begin
    in = button;
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    M_beam_tracker_ldr = ldr_input;
    M_game_on_turn = ~button;
    M_game_beam_position = M_beam_tracker_beam_position;
    io_led[0+7-:8] = 8'h7f >> M_game_p1_turn;
    io_led[8+7-:8] = ldr_input[1+7-:8];
    io_led[0+7+0-:1] = ldr_input[0+0-:1];
    io_led[16+7-:8] = 8'h7f >> M_game_p2_turn;
    M_bin_to_dec_value = M_game_score_out;
    M_multi_seven_seg_values = M_bin_to_dec_digits;
    io_seg = ~M_multi_seven_seg_seg;
    io_sel = ~M_multi_seven_seg_sel;
    p_led[0+0-:1] = M_game_turn_player_out;
    p_led[1+0-:1] = ~M_game_turn_player_out;
    ldr_vol = 9'h1ff;
  end
endmodule
